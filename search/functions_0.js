var searchData=
[
  ['accumulate',['accumulate',['../namespacehydra_1_1detail.html#aba1d594d37633c4b609014cb0deb579c',1,'hydra::detail']]],
  ['accumulate2',['accumulate2',['../namespacehydra_1_1detail.html#a5558041b2d7609840795fe82e1dabec2',1,'hydra::detail']]],
  ['add_5fpdfs',['add_pdfs',['../namespacehydra.html#a8b107fcd843f6c26b301b793378bf856',1,'hydra']]],
  ['addparameter',['AddParameter',['../classhydra_1_1_user_parameters.html#a891111b3ecb2c6ed41a9d00eba3fbf6d',1,'hydra::UserParameters']]],
  ['addpdf',['AddPdf',['../structhydra_1_1_add_pdf.html#a504baf5e0fe4bfb12b3fc04398eb9e93',1,'hydra::AddPdf::AddPdf(PDF1 const &amp;pdf1, PDF2 const &amp;pdf2, PDFs const &amp;...pdfs, std::array&lt; Parameter *, npdfs &gt;const &amp;coef, GBool_t extend=kTrue)'],['../structhydra_1_1_add_pdf.html#ac1235f2db630990bca50d415b66cf61f',1,'hydra::AddPdf::AddPdf(PDF1 const &amp;pdf1, PDF2 const &amp;pdf2, PDFs const &amp;...pdfs, std::array&lt; Parameter *, npdfs-1 &gt;const &amp;coef)'],['../structhydra_1_1_add_pdf.html#accfb55d7fb2a04b0b3c6c7344f66bdc2',1,'hydra::AddPdf::AddPdf(AddPdf&lt; PDF1, PDF2, PDFs... &gt; const &amp;other)']]],
  ['addpoint',['AddPoint',['../classhydra_1_1_point_vector.html#a17e12e1ea66db466a04b6118e61c628d',1,'hydra::PointVector']]],
  ['addtuples',['addTuples',['../namespacehydra_1_1detail.html#ae243d59a2d01f07d1bf0d029f3c0c3bb',1,'hydra::detail::addTuples(const thrust::tuple&lt; T... &gt; &amp;a, const thrust::tuple&lt; T... &gt; &amp;b, index_sequence&lt; I... &gt;)'],['../namespacehydra_1_1detail.html#ac2879f2cb813e483ba54a58699425ec8',1,'hydra::detail::addTuples(const thrust::tuple&lt; T... &gt; &amp;a, const thrust::tuple&lt; T... &gt; &amp;b)']]],
  ['addtupleshelper',['addTuplesHelper',['../namespacehydra_1_1detail.html#af7bfff6876205e314107ec5035a925fe',1,'hydra::detail']]],
  ['applyboostto',['applyBoostTo',['../classhydra_1_1_vector4_r.html#ac30a0beccf6db256aa597c079ee4e2f2',1,'hydra::Vector4R::applyBoostTo(const Vector4R &amp;p4, bool inverse=false)'],['../classhydra_1_1_vector4_r.html#a2f1be66b151b11ab281c66a3e4fbca50',1,'hydra::Vector4R::applyBoostTo(const Vector3R &amp;boost, bool inverse=false)'],['../classhydra_1_1_vector4_r.html#a1c46eef104c0ab70f1f455bee2bf9020',1,'hydra::Vector4R::applyBoostTo(const GReal_t bx, const GReal_t by, const GReal_t bz, bool inverse=false)']]],
  ['applyrotateeuler',['applyRotateEuler',['../classhydra_1_1_vector3_r.html#aa411783727d3dab9a424333896e32ec8',1,'hydra::Vector3R::applyRotateEuler()'],['../classhydra_1_1_vector4_r.html#a6a39a2271379205a9284e0a124d55f45',1,'hydra::Vector4R::applyRotateEuler()']]],
  ['argument',['Argument',['../structhydra_1_1_argument.html#a55b168fac1cb22258652d7334d9adacf',1,'hydra::Argument']]],
  ['arraytotuple',['arrayToTuple',['../namespacehydra_1_1detail.html#a2fb09f08e05c59f9cb8f7810677b0a35',1,'hydra::detail::arrayToTuple(std::array&lt; T, N &gt;const &amp;Array) -&gt; decltype(arrayToTupleHelper(Array, make_index_sequence&lt; N &gt;'],['../namespacehydra_1_1detail.html#a3472c9de37321e72c5cd6573f01d83a7',1,'hydra::detail::arrayToTuple(T *Array) -&gt; decltype(arrayToTupleHelper(Array, make_index_sequence&lt; N &gt;']]],
  ['arraytotuplehelper',['arrayToTupleHelper',['../namespacehydra_1_1detail.html#afec5c12ba9f55606e1cea9c46aad2e51',1,'hydra::detail::arrayToTupleHelper(std::array&lt; T, sizeof...(Is)&gt;const &amp;Array, index_sequence&lt; Is... &gt;) -&gt; decltype(thrust::make_tuple(Array[Is]...))'],['../namespacehydra_1_1detail.html#aaee6057c171b9d18e1098eca598d9992',1,'hydra::detail::arrayToTupleHelper(T *Array, index_sequence&lt; Indices... &gt;) -&gt; decltype(thrust::make_tuple(Array[Indices]...))']]]
];
