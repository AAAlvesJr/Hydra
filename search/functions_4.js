var searchData=
[
  ['end',['end',['../structhydra_1_1_events.html#a56d6101235a61b95ba79d0c64983084f',1,'hydra::Events::end()'],['../classhydra_1_1_point_vector.html#a1f73f2ef01b12db0eb5e3bd8b9d9dc7a',1,'hydra::PointVector::end() const '],['../classhydra_1_1_point_vector.html#a473dd9a02d513f4baac5696039982a7f',1,'hydra::PointVector::end()'],['../structhydra_1_1_range.html#ac2150681c29eaf23b4fb7c373bd75817',1,'hydra::Range::end() const '],['../structhydra_1_1_range.html#a98aa9762067de937e4eb65cd483bcb89',1,'hydra::Range::end()'],['../classstrided__range.html#a2cccc63ba96ea6b1c4320301458614d4',1,'strided_range::end()']]],
  ['error',['Error',['../structhydra_1_1_parameter.html#a9faea07ef7ea36231838f227f8c8a1c7',1,'hydra::Parameter']]],
  ['eval',['Eval',['../classhydra_1_1_log_likelihood_f_c_n.html#a60096c5b9263034deaf53ff2bfcf0e60',1,'hydra::LogLikelihoodFCN::Eval(const std::vector&lt; double &gt; &amp;parameters) const '],['../classhydra_1_1_log_likelihood_f_c_n.html#a2b19d34300cec7909a8751f9de4911c7',1,'hydra::LogLikelihoodFCN::Eval(const std::vector&lt; double &gt; &amp;parameters) const '],['../namespacehydra.html#a792f64fe5b6422f76bcf028f92ac2861',1,'hydra::Eval(Functor const &amp;t, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; typename Functor::return_type &gt;, mc_host_vector&lt; typename Functor::return_type &gt;&gt;::type'],['../namespacehydra.html#a8196aec8ca6395bb4e08f85054fd2a0f',1,'hydra::Eval(thrust::tuple&lt; Functors... &gt; const &amp;t, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functors::return_type... &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functors::return_type... &gt;::type &gt;::type'],['../namespacehydra.html#aa1f02c03b9fd39e22a7395fa50ef9846',1,'hydra::Eval(Functor const &amp;t, typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; Tuple &gt;, mc_host_vector&lt; Tuple &gt;&gt; const &amp;Cache, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functor::return_type &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functor::return_type &gt;::type &gt;::type'],['../namespacehydra.html#a25eaefdcef6ef586e4797fddf3d3c8db',1,'hydra::Eval(thrust::tuple&lt; Functors... &gt; const &amp;t, typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; Tuple &gt;, mc_host_vector&lt; Tuple &gt;&gt; const &amp;Cache, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functors::return_type... &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functors::return_type... &gt;::type &gt;::type']]],
  ['eval_5fon_5ftuple_5felement',['eval_on_tuple_element',['../namespacehydra_1_1detail.html#a271c57456b2e3b88c8bef6c036008a2f',1,'hydra::detail::eval_on_tuple_element(int, thrust::tuple&lt; Tp... &gt; const &amp;, FuncT const &amp;)'],['../namespacehydra_1_1detail.html#a55b5f9a790a43d9c4479f22e4850ec63',1,'hydra::detail::eval_on_tuple_element(int index, thrust::tuple&lt; Tp... &gt; const &amp;t, FuncT const &amp;f)']]],
  ['eval_5ftuple_5felement',['eval_tuple_element',['../namespacehydra_1_1detail.html#a26dea55996f0924095b20793f2e7efbd',1,'hydra::detail::eval_tuple_element(Return_Type &amp;, int, thrust::tuple&lt; Tp... &gt; const &amp;, ArgType const &amp;)'],['../namespacehydra_1_1detail.html#a85f5a7623a17a4f0c614e57cf4e2b2ae',1,'hydra::detail::eval_tuple_element(Return_Type &amp;r, int index, thrust::tuple&lt; Tp... &gt; const &amp;t, ArgType const &amp;arg)']]],
  ['evaluate',['Evaluate',['../structhydra_1_1_lambda_wrapper_3_01_return_type_07_arg_type_08_00_01_l_01_4.html#a604e9208e9b32b09741bafe9b0f2b349',1,'hydra::LambdaWrapper&lt; ReturnType(ArgType), L &gt;']]],
  ['events',['Events',['../structhydra_1_1_events.html#a89717278f21c484fa8595ef59b09dd15',1,'hydra::Events::Events()'],['../structhydra_1_1_events.html#a5ab93fc4938347f998143d541f3c5ded',1,'hydra::Events::Events(GLong_t nevents)'],['../structhydra_1_1_events.html#a4bc30bbd45a57a1724f16f60b1353cf5',1,'hydra::Events::Events(Events&lt; N, BACKEND2 &gt; const &amp;other)']]],
  ['exp',['Exp',['../classhydra_1_1_random.html#a3dbc414994aa19965b7ff815300aff96',1,'hydra::Random']]],
  ['extract',['extract',['../namespacehydra_1_1detail.html#a23499c14020d82a433a6cdaeddede895',1,'hydra::detail']]]
];
