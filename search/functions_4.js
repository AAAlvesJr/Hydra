var searchData=
[
  ['end',['end',['../d2/de7/a00014.html#a56d6101235a61b95ba79d0c64983084f',1,'hydra::Events::end()'],['../d8/d41/a00038.html#a1f73f2ef01b12db0eb5e3bd8b9d9dc7a',1,'hydra::PointVector::end() const '],['../d8/d41/a00038.html#a473dd9a02d513f4baac5696039982a7f',1,'hydra::PointVector::end()'],['../d6/d97/a00045.html#ac2150681c29eaf23b4fb7c373bd75817',1,'hydra::Range::end() const '],['../d6/d97/a00045.html#a98aa9762067de937e4eb65cd483bcb89',1,'hydra::Range::end()'],['../d4/dca/a00048.html#a2cccc63ba96ea6b1c4320301458614d4',1,'strided_range::end()']]],
  ['error',['Error',['../df/d61/a00031.html#a9faea07ef7ea36231838f227f8c8a1c7',1,'hydra::Parameter']]],
  ['eval',['Eval',['../dc/d3c/a00028.html#a60096c5b9263034deaf53ff2bfcf0e60',1,'hydra::LogLikelihoodFCN::Eval(const std::vector&lt; double &gt; &amp;parameters) const '],['../dc/d3c/a00028.html#a2b19d34300cec7909a8751f9de4911c7',1,'hydra::LogLikelihoodFCN::Eval(const std::vector&lt; double &gt; &amp;parameters) const '],['../d7/dd4/a00013.html#a792f64fe5b6422f76bcf028f92ac2861',1,'hydra::Eval(Functor const &amp;t, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; typename Functor::return_type &gt;, mc_host_vector&lt; typename Functor::return_type &gt;&gt;::type'],['../d7/dd4/a00013.html#a8196aec8ca6395bb4e08f85054fd2a0f',1,'hydra::Eval(thrust::tuple&lt; Functors... &gt; const &amp;t, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functors::return_type... &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functors::return_type... &gt;::type &gt;::type'],['../d7/dd4/a00013.html#aa1f02c03b9fd39e22a7395fa50ef9846',1,'hydra::Eval(Functor const &amp;t, typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; Tuple &gt;, mc_host_vector&lt; Tuple &gt;&gt; const &amp;Cache, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functor::return_type &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functor::return_type &gt;::type &gt;::type'],['../d7/dd4/a00013.html#a25eaefdcef6ef586e4797fddf3d3c8db',1,'hydra::Eval(thrust::tuple&lt; Functors... &gt; const &amp;t, typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, mc_device_vector&lt; Tuple &gt;, mc_host_vector&lt; Tuple &gt;&gt; const &amp;Cache, Range&lt; Iterator &gt;const &amp;range, Range&lt; Iterators &gt;const &amp;...ranges) -&gt; typename detail::if_then_else&lt; std::is_same&lt; thrust::device_system_tag, typename Range&lt; Iterator &gt;::system &gt;::value, typename EvalReturnType&lt; mc_device_vector, typename Functors::return_type... &gt;::type, typename EvalReturnType&lt; mc_host_vector, typename Functors::return_type... &gt;::type &gt;::type']]],
  ['evaluate',['Evaluate',['../d6/d5b/a00026.html#a604e9208e9b32b09741bafe9b0f2b349',1,'hydra::LambdaWrapper&lt; ReturnType(ArgType), L &gt;']]],
  ['events',['Events',['../d2/de7/a00014.html#a89717278f21c484fa8595ef59b09dd15',1,'hydra::Events::Events()'],['../d2/de7/a00014.html#a5ab93fc4938347f998143d541f3c5ded',1,'hydra::Events::Events(GLong_t nevents)'],['../d2/de7/a00014.html#a4bc30bbd45a57a1724f16f60b1353cf5',1,'hydra::Events::Events(Events&lt; N, BACKEND2 &gt; const &amp;other)']]],
  ['exp',['Exp',['../d5/df9/a00044.html#a3dbc414994aa19965b7ff815300aff96',1,'hydra::Random']]]
];
